#문자열 포멧 공부

# 1 단순한 문자열 연결
# 문자열 출력 방식 그냥 단순하게 문자열끼리 +를 이용해서 연결 시키는 방법도 있지만 ,를 이용해서 연결하는 방법도 있다. 이 경우에는 ,가 스페이스 로 치환된다고 생각하면 좋다.
print("a" + "b") # ab
print("a", "b") # a b

# 2 %를 이용한 방법
# print("문자열 %d문자열"%정수)   # %d는 정수를 표현 decimal
# print("문자열 %c문자열"%문자)   # %c는 문자를 표현 character
# print("문자열 %s문자열"%문자열)  # %s는 문자열을 표현 string # %s를 쓰게되면 정수, 문자, 문자열 상관 없이 모든 값을 넣을수 있다.
# 값을 넣을 때는 % 뒤에 한칸 띄우고 값을 입력한다.

# 가장 큰 특징 : %s는 만능이라고 생각해도 된다. 마지막 출력
print("------ %이용한 출력")
print("올해는 %d년도 입니다." % 2021) # 올해는 2021년도 입니다.
print("%s을 공부하기 시작했습니다." % "파이썬") #파이썬을 공부하기 시작했습니다.
print("MacBook은 %c로 시작한다." % "M") #MacBook은 M로 시작한다.
print("요즘 사고 싶은 주식은 %s와 %s입니다." % ("삼성전자", "애플" )) #요즘 사고 싶은 주식은 삼성전자와 애플입니다.
print("%s를 %d개 가지고 있었는데 지금은 하나도 없다." % ("블리자드", 100)) #블리자드를 100개 가지고 있었는데 지금은 하나도 없다.

print("%s을 공부하기 시작했습니다." % "파이썬") #파이썬을 공부하기 시작했습니다.

# 3 .format()를 이용한 방법
# print("문자열 {} 문자열" .format(문자열))  #{}내부로 .format()내부의 문자열이 입력된다.

# 가장 큰 특징 : {}내부에 인덱스를 지정 가능하다. 인덱스를 지정할 경우 지정된 파라미터순으로 출력된다. (인덱스는 0부터 시작.)
print("------ .format() 을 이용한 출력")
print("올해는 {}년도 입니다." .format(2021)) #올해는 2021년도 입니다.
print("{}을 공부하기 시작했습니다." .format("파이썬")) #파이썬을 공부하기 시작했습니다.
print("MacBook은 {}로 시작한다.".format("M")) #MacBook은 M로 시작한다.
print("요즘 사고 싶은 주식은 {}와 {}입니다." .format("삼성전자", "애플")) #요즘 사고 싶은 주식은 삼성전자와 애플입니다.
print("{}를 {}개 가지고 있었는데 지금은 하나도 없다." .format("블리자드", 100)) #블리자드를 100개 가지고 있었는데 지금은 하나도 없다.

print("{1}를 {0}개를 가지고 있었는데 지금은 하나도 없다" .format("블리자드", 100)) #100를 블리자드개 가지고 있었는데 지금은 하나도 없다.

# 4 이름으로써 지정하는방법 
# primnt("문자열 {이름} 문자열" .format(이름 ="문자열")) 

# 가장 큰 특징 : 2번의 .format()과 비슷하나 인덱스로 지정 하는 것보단 명확하게 변수를 알수 있다. 
print("------ 이름을 이용한 출력")
print("올해는 {year}년도 입니다." .format(year = 2021)) #올해는 2021년도 입니다.
print("{study}을 공부하기 시작했습니다." .format(study = "파이썬")) #파이썬을 공부하기 시작했습니다.
print("MacBook은 {a}로 시작한다.".format(a = "M")) #MacBook은 M로 시작한다.
print("요즘 사고 싶은 주식은 {주식1}와 {stock}입니다." .format(주식1 = "삼성전자",stock = "애플")) #요즘 사고 싶은 주식은 삼성전자와 애플입니다.
print("{st}를 {count}개 가지고 있었는데 지금은 하나도 없다." .format(st = "블리자드", count = 100)) #블리자드를 100개 가지고 있었는데 지금은 하나도 없다.

print("{count}를 {st}개를 가지고 있었는데 지금은 하나도 없다" .format(st = "블리자드",count = 100)) #100를 블리자드개 가지고 있었는데 지금은 하나도 없다.

# 5 f-string방법 # f-string은 문자열 앞에  f을 추가해 주면 앞에서 선언된 변수를 그대로 사용가능하다. 단, 파이썬 버전 3.6이상부터 가능하다.
# 출력문 앞에 f를 추가해 주면 앞에서 선언된 변수를 그대로 사용가능하다.

# 가장 큰 특징 : 파이썬 버젼 3.6이상부터 가능, 변수를 미리 설정가능한 특징이 있다.
print("------ f-string를 이용한 방법")
year = 2021
study = "파이썬"
print(f"올해는 {year}년도 입니다.") #올해는 2021년도 입니다.
print(f"{study}을 공부하기 시작했습니다.") #파이썬을 공부하기 시작했습니다.